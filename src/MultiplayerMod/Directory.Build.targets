<?xml version="1.0" encoding="utf-8"?>
<Project>
    <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.targets', '$(MSBuildThisFileDirectory)../'))" />

    <Target Name="SetVersionAttributes" BeforeTargets="InitializeSourceControlInformation">
        <Exec Command="git rev-parse --is-inside-work-tree" IgnoreExitCode="True">
            <Output PropertyName="GitWorkTreeExitCode" TaskParameter="ExitCode"/>
        </Exec>
        <CallTarget Targets="SetVersionAttributesFromGitRepository" Condition="$(GitWorkTreeExitCode) == 0"/>
    </Target>

    <Target Name="SetVersionAttributesFromGitRepository">
        <Exec
            Command="git describe --long --always --dirty --exclude=* --abbrev=8"
            ConsoleToMSBuild="True"
            IgnoreExitCode="True"
        >
            <Output PropertyName="GitRevision" TaskParameter="ConsoleOutput"/>
        </Exec>
        <Exec Command="git describe --tag --abbrev=0" ConsoleToMSBuild="True" IgnoreExitCode="True">
            <Output PropertyName="GitVersion" TaskParameter="ConsoleOutput"/>
            <Output PropertyName="GitVersionErrorCode" TaskParameter="ExitCode"/>
        </Exec>
        <PropertyGroup Condition="$(GitVersionErrorCode) != 0">
            <GitVersion>0.0.0</GitVersion>
        </PropertyGroup>
        <CreateProperty Value="$([System.Text.RegularExpressions.Regex]::Match($(GitVersion), [^v].*))">
            <Output TaskParameter="Value" PropertyName="GitVersion"/>
        </CreateProperty>
        <CreateProperty Value="$([System.Text.RegularExpressions.Regex]::Match($(GitVersion), \d+\.\d+.\d+))">
            <Output TaskParameter="Value" PropertyName="GitNumericVersion"/>
        </CreateProperty>
        <PropertyGroup>
            <BuildVersion>$(GitVersion)-$(GitRevision)</BuildVersion>
            <InformationalVersion>$(BuildVersion)</InformationalVersion>
            <FileVersion>$(GitNumericVersion).0</FileVersion>
            <AssemblyVersion>$(GitNumericVersion)</AssemblyVersion>
        </PropertyGroup>
        <Message Text="Build version = $(InformationalVersion)" Importance="high"/>
    </Target>

    <Target Name="CopyModDescription" AfterTargets="Build">
        <Copy SourceFiles="$(SourceDir)mod.yaml" DestinationFolder="$(TargetDir)"/>
    </Target>

    <Target Name="CopyLanConfigExample" AfterTargets="Build">
        <Copy SourceFiles="$(SourceDir)lanconfig.example.txt" DestinationFolder="$(TargetDir)"/>
    </Target>

    <Target Name="GenerateModInfo" AfterTargets="Build">
        <Message Text="Generating mod_info.yaml"/>
        <ItemGroup>
            <ModInfoYaml Include="supportedContent: $(OniSupportedContent)"/>
            <ModInfoYaml Include="minimumSupportedBuild: $(OniMinimumSupportedBuild)"/>
            <ModInfoYaml Include="version: $(BuildVersion)"/>
            <ModInfoYaml Include="APIVersion: $(OniApiVersion)"/>
        </ItemGroup>
        <WriteLinesToFile
            File="$(TargetDir)mod_info.yaml"
            Lines="@(ModInfoYaml)"
            Overwrite="true"
            WriteOnlyWhenDifferent="true"
        />
    </Target>

    <Target Name="CreateReleasePackage"
            Condition="'$(Configuration)' == 'Publish'"
            AfterTargets="Build"
            DependsOnTargets="CopyModDescription; CopyLanConfigExample; GenerateModInfo"
    >
        <ItemGroup>
            <ModFiles Include="$(TargetDir)*.yaml"/>
            <ModFiles Include="$(TargetDir)*.txt"/>
            <ModFiles Include="$(TargetDir)*.dll"/>
            <Scripts Include="$(SourceDir)..\..\scripts\*.*"/>
        </ItemGroup>
        <Copy SourceFiles="@(ModFiles)" DestinationFolder="$(TargetDir)archive\MultiplayerMod"/>
        <Copy SourceFiles="@(Scripts)" DestinationFolder="$(TargetDir)archive"/>
        <ZipDirectory SourceDirectory="$(TargetDir)archive"
                      DestinationFile="$(TargetDir)multiplayer-mod-$(GitVersion).zip"
                      Overwrite="true"
        />
    </Target>

    <Target Name="InstallMod"
            AfterTargets="AfterBuild"
            Condition="'$(Configuration)' == 'Debug'"
            DependsOnTargets="CopyModDescription; GenerateModInfo"
    >
        <Message Text="Copy mod files to ONI mods directory"/>
        <ItemGroup>
            <ModFiles Include="$(TargetDir)*.*"/>
        </ItemGroup>
        <Copy SourceFiles="@(ModFiles)" DestinationFolder="$(ModInstallationPath)"/>
    </Target>

    <Target Name="ProcessAttributes" AfterTargets="PostBuildEvent">
        <ItemGroup>
            <SearchPaths Include="$(ManagedPath)"/>
        </ItemGroup>
        <ProcessAttributes AssemblyPath="$(TargetPath)" AssemblySearchPaths="@(SearchPaths)"/>
    </Target>

</Project>
